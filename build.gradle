plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.0'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'kr'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	
	/* Security */
	implementation 'org.springframework.boot:spring-boot-starter-security'
	
	/* OAuth2 */
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	
	/* Thymeleaf Security */
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
	
	/* Tyhmeleaf Layout */
	implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'
	
	/* SPRING CLOUD AWS */
	implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-aws', version: '2.2.6.RELEASE'
	implementation group: 'org.springframework.cloud', name: 'spring-cloud-aws-context', version: '2.2.6.RELEASE'
	implementation group: 'org.springframework.cloud', name: 'spring-cloud-aws-autoconfigure', version: '2.2.6.RELEASE'
	
	/* Sql log */
	implementation group: 'org.bgee.log4jdbc-log4j2', name: 'log4jdbc-log4j2-jdbc4.1', version: '1.16'
	
	implementation 'com.google.code.gson:gson'
	
	/* Querydsl */
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
}

tasks.named('test') {
	useJUnitPlatform()
}

/* Querydsl 설정부 */
def generated = 'src/main/generated'

/* querydsl QClass 파일 생성 위치를 지정 */
tasks.withType(JavaCompile) {
	options.getGeneratedSourceOutputDirectory().set(file(generated))
}

/* java source set 에 querydsl QClass 위치 추가 */
sourceSets {
	main.java.srcDirs += [ generated ]
}

/* gradle clean 시에 QClass 디렉토리 삭제 */
clean {
	delete file(generated)
}
